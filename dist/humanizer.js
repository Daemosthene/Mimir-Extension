(()=>{void 0!==window.nlp&&window.nlp.extend(window.compromiseSentences);class e{constructor(e={}){this.p_passive=e.p_passive||.2,this.p_synonym_replacement=e.p_synonym_replacement||.3,this.p_academic_transition=e.p_academic_transition||.3,this.academic_transitions=["Moreover,","Additionally,","Furthermore,","Hence,","Therefore,","Consequently,","Nonetheless,","Nevertheless,","In light of this,","Given these points,","Subsequently,","In this regard,","To this end,","In this context,","Correspondingly,","Similarly,","Equally important,"],this.contraction_map={"n't":" not","'re":" are","'s":" is","'ll":" will","'ve":" have","'d":" would","'m":" am","ain't":"am not","aren't":"are not","can't":"cannot","couldn't":"could not","didn't":"did not","doesn't":"does not","don't":"do not","hadn't":"had not","hasn't":"has not","haven't":"have not","he'd":"he would","he'll":"he will","he's":"he is","I'd":"I would","I'll":"I will","I'm":"I am","I've":"I have","isn't":"is not","it's":"it is","let's":"let us","mightn't":"might not","mustn't":"must not","shan't":"shall not","she'd":"she would","she'll":"she will","she's":"she is","shouldn't":"should not","that's":"that is","there's":"there is","they'd":"they would","they'll":"they will","they're":"they are","they've":"they have","wasn't":"was not","we'd":"we would","we'll":"we will","we're":"we are","we've":"we have","weren't":"were not","what'll":"what will","what're":"what are","what's":"what is","what've":"what have","where's":"where is","who'd":"who would","who'll":"who will","who're":"who are","who's":"who is","who've":"who have","won't":"will not","wouldn't":"would not","you'd":"you would","you'll":"you will","you're":"you are","you've":"you have","y'all":"you all",gonna:"going to",gotta:"got to",wanna:"want to"},this.synonyms_map={thing:["element","component","entity","factor","aspect"],idea:["concept","notion","perspective","theory","framework"],problem:["issue","challenge","dilemma","obstacle","impediment"],result:["outcome","consequence","implication","finding","determination"],part:["component","constituent","segment","element","portion"],way:["methodology","approach","strategy","mechanism","procedure"],person:["individual","subject","participant","respondent","entity"],time:["duration","period","interval","timeframe","chronology"],end:["conclusion","termination","cessation","culmination","finalization"],place:["location","site","venue","position","locale"],good:["favorable","beneficial","advantageous","superior","exemplary"],bad:["adverse","unfavorable","detrimental","suboptimal","deficient"],big:["substantial","considerable","significant","extensive","pronounced"],small:["minimal","limited","restricted","constrained","negligible"],important:["significant","crucial","essential","fundamental","pivotal"],hard:["challenging","demanding","arduous","strenuous","rigorous"],easy:["straightforward","uncomplicated","manageable","accessible","undemanding"],high:["elevated","substantial","considerable","significant","pronounced"],low:["minimal","limited","restricted","constrained","negligible"],new:["novel","innovative","recent","contemporary","emergent"],old:["traditional","established","conventional","preceding","antecedent"],different:["distinct","disparate","divergent","heterogeneous","contrasting"],same:["identical","equivalent","analogous","corresponding","homologous"],large:["substantial","extensive","considerable","significant","voluminous"],say:["assert","contend","posit","articulate","postulate"],think:["consider","contemplate","conceptualize","theorize","hypothesize"],see:["observe","examine","investigate","analyze","scrutinize"],know:["comprehend","understand","ascertain","discern","recognize"],get:["obtain","acquire","procure","attain","secure"],make:["construct","produce","generate","formulate","synthesize"],go:["proceed","advance","progress","continue","ensue"],come:["approach","advance","progress","emerge","materialize"],take:["acquire","obtain","extract","derive","procure"],find:["discover","identify","ascertain","determine","establish"],give:["provide","supply","furnish","contribute","deliver"],tell:["inform","communicate","convey","relate","elucidate"],work:["function","operate","perform","execute","process"],call:["designate","characterize","denominate","classify","categorize"],try:["attempt","endeavor","strive","undertake","pursue"],ask:["inquire","investigate","examine","explore","interrogate"],need:["require","necessitate","entail","warrant","demand"],feel:["perceive","discern","sense","apprehend","experience"],become:["transform into","develop into","evolve into","convert to","transition to"],leave:["depart from","withdraw from","exit from","abandon","vacate"],put:["position","situate","place","locate","establish"],mean:["signify","denote","indicate","represent","imply"],keep:["maintain","sustain","preserve","retain","conserve"],let:["permit","allow","enable","facilitate","accommodate"],begin:["commence","initiate","instigate","embark upon","undertake"],seem:["appear","manifest","present as","be perceived as","be regarded as"],help:["assist","facilitate","support","aid","contribute to"],show:["demonstrate","illustrate","elucidate","depict","explicate"],hear:["perceive","discern","apprehend","detect","distinguish"],play:["engage in","participate in","perform","execute","conduct"],run:["operate","function","proceed","progress","execute"],move:["transfer","relocate","reposition","transpose","displace"],like:["prefer","favor","be partial to","have a preference for","be inclined toward"],live:["reside","dwell","inhabit","occupy","populate"],believe:["consider","maintain","hold that","be of the opinion","contend"],bring:["introduce","present","submit","advance","propose"],happen:["occur","transpire","take place","come about","materialize"],use:["utilize","employ","apply","implement","exercise"],look:["examine","inspect","scrutinize","investigate","analyze"]}}humanizeText(e,t=!1,n=!1){if(void 0===window.nlp)return console.error("Compromise library not loaded. Returning original text."),e;try{return window.nlp(e).sentences().json().map(e=>{let o=e.text;return o=this.expandContractions(o),Math.random()<this.p_academic_transition&&(o=this.addAcademicTransition(o)),t&&Math.random()<this.p_passive&&(o=this.convertToPassive(o)),n&&(o=this.replaceWithSynonyms(o)),o}).join(" ")}catch(t){return console.error("Error in humanizing text:",t),e}}expandContractions(e){const t=Object.keys(this.contraction_map).sort((e,t)=>t.length-e.length);let n=e;for(const e of t){const t=new RegExp(`\\b${e}\\b`,"gi");n=n.replace(t,e=>{const t=this.contraction_map[e.toLowerCase()];return t?e[0]===e[0].toUpperCase()?t.charAt(0).toUpperCase()+t.slice(1):t:e})}for(const[e,t]of Object.entries(this.contraction_map))if(e.startsWith("'")){const o=new RegExp(`\\w+${e.replace(/'/g,"\\'")}\\b`,"gi");n=n.replace(o,n=>{if(!n||n.length<=e.length)return n;const o=n.slice(0,-e.length);return o?o+t:n})}return n}addAcademicTransition(e){const t=e.toLowerCase();for(const n of this.academic_transitions)if(t.startsWith(n.toLowerCase()))return e;return`${this.academic_transitions[Math.floor(Math.random()*this.academic_transitions.length)]} ${e.charAt(0).toLowerCase()+e.slice(1)}`}convertToPassive(e){if(void 0===window.nlp)return e;try{const t=window.nlp(e).clauses().json();if(0===t.length)return e;for(const n of t){const t=window.nlp(n.text),o=t.match("#Noun").before("#Verb").first(),i=t.verbs().first(),a=t.match("#Noun").after("#Verb").first();if(o.found&&i.found&&a.found){const t=o.text(),n=i.text(),r=a.text();try{const o=i.clone().toParticiple().text();if(o){const i=`${r} is ${o} by ${t}`,a=`${t} ${n} ${r}`;if(e.includes(a))return e.replace(a,i)}}catch(e){continue}}}return e}catch(t){return console.error("Error in convertToPassive:",t),e}}replaceWithSynonyms(e){if(void 0===window.nlp)return e;try{const t=window.nlp(e).match("#Noun|#Adjective|#Verb").not("#Pronoun").json();let n=e;for(const e of t){if(!e||!e.text)continue;const t=e.text.toLowerCase();if(!(t.length<4||/[^\w\s]/.test(t)||Math.random()>this.p_synonym_replacement)&&this.synonyms_map[t]){const e=this.synonyms_map[t],o=e[Math.floor(Math.random()*e.length)];try{const e=new RegExp(`\\b${t}\\b`,"i");n=n.replace(e,e=>e?e[0]===e[0].toUpperCase()?o.charAt(0).toUpperCase()+o.slice(1):o:t)}catch(e){console.error(`Error replacing word "${t}":`,e)}}}return n}catch(t){return console.error("Error in replaceWithSynonyms:",t),e}}}function t(e){return e.trim().split(/\s+/).filter(e=>e.length>0).length}function n(e){return nlp(e).sentences().length}window.AcademicTextHumanizer=e;const o=document.getElementById("userText"),i=document.getElementById("fileUpload"),a=document.getElementById("usePassive"),r=document.getElementById("useSynonyms"),s=document.getElementById("transformBtn"),c=document.getElementById("outputSection"),l=document.getElementById("transformedText"),d=document.getElementById("loadingSpinner"),u=document.getElementById("inputWordCount"),m=document.getElementById("inputSentenceCount"),p=document.getElementById("outputWordCount"),h=document.getElementById("outputSentenceCount"),g=new e({p_passive:.35,p_synonym_replacement:.4,p_academic_transition:.45});i.addEventListener("change",async e=>{if(e.target.files.length>0)try{const n=await(t=e.target.files[0],new Promise((e,n)=>{const o=new FileReader;o.onload=function(t){e(t.target.result)},o.onerror=function(e){n(new Error("Failed to read file"))},o.readAsText(t)}));o.value=n}catch(e){alert("Error reading file: "+e.message)}var t}),s.addEventListener("click",async()=>{const e=o.value.trim();if(e){d.classList.remove("d-none");try{const o=a.checked,i=r.checked,s=t(e),w=n(e);setTimeout(()=>{try{const a=g.humanizeText(e,o,i),r=t(a),d=n(a);l.textContent=a,u.textContent=s,m.textContent=w,p.textContent=r,h.textContent=d,c.classList.remove("d-none")}catch(e){console.error("Error in text transformation:",e),alert("An error occurred during transformation. Please check the console for details.")}finally{d.classList.add("d-none")}},50)}catch(e){console.error("Error preparing transformation:",e),alert("Error preparing transformation: "+e.message),d.classList.add("d-none")}}else alert("Please enter or upload some text to transform.")}),document.addEventListener("DOMContentLoaded",()=>{const e=document.createElement("button");e.innerText="Load Example Text",e.className="btn btn-secondary me-2",e.addEventListener("click",()=>{o.value="I've been thinking about how AI will change our work. It's gonna be a big shift, but I think it'll help us do more with less time. We can't ignore how it's already changing things. Let's make sure we're ready for what comes next!"});const t=document.createElement("button");t.innerText="Clear Text",t.className="btn btn-outline-secondary",t.addEventListener("click",()=>{o.value=""}),s.parentNode.insertBefore(e,s),s.parentNode.insertBefore(t,s.nextSibling)})})();