(()=>{let e="";function t(e){const t=document.getElementById("editor");document.execCommand(e,!1),t.focus()}function n(e){const t=document.getElementById("editor");document.execCommand(`justify${e}`,!1),t.focus()}document.addEventListener("DOMContentLoaded",function(){!function(){console.log("Initializing editor...");const o=document.getElementById("editor"),i=document.getElementById("promptInput"),r=document.getElementById("generateBtn"),d=document.getElementById("humanizeBtn"),c=document.getElementById("downloadBtn"),l=document.getElementById("copyBtn");chrome.storage.local.get("promptEditorInitialText",({promptEditorInitialText:e})=>{e&&(i.value=e,o.innerText.trim()||(o.innerText=e))}),chrome.storage.local.get("promptEditorEditText",({promptEditorEditText:e})=>{o.innerText=e||""}),r?(console.log("Adding event listener to generateBtn"),r.addEventListener("click",function(){const t=i.value.trim();t?async function(t){const n=document.getElementById("editor"),o=document.getElementById("loadingMessage"),i=document.getElementById("statusMessage");o&&(o.style.display="block"),i&&(i.textContent="Generating response...");try{const o=await fetch("https://mimir-server-daemosthene-mimir-extension.vercel.app/api/mimir",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"Generate Essay",text:t})});if(!o.ok){const e=await o.json();throw new Error(e.error||"Failed to generate response")}const r=await o.json();e=r.result||"",n.innerHTML=e,i&&(i.textContent="Response generated successfully")}catch(e){console.error("Error generating response:",e),n.innerHTML=`<p class="error">Error: ${e.message}</p>`,i&&(i.textContent=`Error: ${e.message}`)}finally{o&&(o.style.display="none")}}(t):alert("Please enter a prompt first.")})):console.error("Generate button not found"),d?(console.log("Adding event listener to humanizeBtn"),d.addEventListener("click",function(){!function(){console.log("Humanizing text...");const e=document.getElementById("editor"),t=document.getElementById("statusMessage"),n=document.getElementById("humanizeStatus"),o=e.innerHTML;if(o&&""!==o.trim())try{n&&(n.textContent="Humanizing text...",n.style.display="block");const i=document.createElement("div");i.innerHTML=o;const r=i.textContent||i.innerText||"";if(console.log("Original text:",r),void 0===window.AcademicTextHumanizer)return console.error("AcademicTextHumanizer is not defined"),void(t&&(t.textContent="Error: Humanizer not available"));const d=new window.AcademicTextHumanizer({p_passive:.35,p_synonym_replacement:.4,p_academic_transition:.45}).humanizeText(r,!0,!0);console.log("Humanized text:",d),e.innerText=d,t&&(t.textContent="Text humanized successfully"),n&&(n.textContent="âœ“ Text has been humanized to appear less AI-generated",n.style.color="#4CAF50",setTimeout(()=>{n.style.display="none"},3e3))}catch(e){console.error("Error humanizing text:",e),t&&(t.textContent="Failed to humanize text: "+e.message)}else t&&(t.textContent="No text to humanize. Generate a response first.")}()})):console.error("Humanize button not found"),l&&l.addEventListener("click",function(){!function(){const e=document.getElementById("editor"),t=document.getElementById("statusMessage"),n=e.innerText||e.textContent;navigator.clipboard.writeText(n).then(()=>{t&&(t.textContent="Text copied to clipboard!")}).catch(e=>{console.error("Failed to copy text:",e),t&&(t.textContent="Failed to copy text. Please try again or copy manually.")})}()}),c&&c.addEventListener("click",function(){!function(){const e=document.getElementById("editor"),t=document.getElementById("statusMessage"),n=e.innerHTML,o=new Blob([`\n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n      <meta charset="UTF-8">\n      <title>Mimir Export</title>\n      <style>\n        body { font-family: Arial, sans-serif; line-height: 1.5; }\n      </style>\n    </head>\n    <body>\n      ${n}\n    </body>\n    </html>\n  `],{type:"application/msword"}),i=document.createElement("a");i.href=URL.createObjectURL(o),i.download="mimir-export.doc",document.body.appendChild(i),i.click(),document.body.removeChild(i),t&&(t.textContent="Document exported successfully")}()}),function(){const e=document.getElementById("boldBtn"),o=document.getElementById("italicBtn"),i=document.getElementById("underlineBtn"),r=document.getElementById("alignLeftBtn"),d=document.getElementById("alignCenterBtn"),c=document.getElementById("alignRightBtn"),l=document.getElementById("justifyBtn"),a=document.getElementById("lineSpacing");e&&e.addEventListener("click",()=>t("bold")),o&&o.addEventListener("click",()=>t("italic")),i&&i.addEventListener("click",()=>t("underline")),r&&r.addEventListener("click",()=>n("left")),d&&d.addEventListener("click",()=>n("center")),c&&c.addEventListener("click",()=>n("right")),l&&l.addEventListener("click",()=>n("justify")),a&&a.addEventListener("change",function(){!function(e){const t=document.getElementById("editor"),n=window.getSelection();if(n.rangeCount>0){(function(e){const t=[],n=e.endContainer;let o=e.startContainer;if(o===n)return t.push(o),t;let i=o;for(;i&&i!==n;)if(t.push(i),i.childNodes.length>0)i=i.firstChild;else if(i.nextSibling)i=i.nextSibling;else{let e=i.parentNode;for(;e&&!e.nextSibling;)e=e.parentNode;if(!e)break;i=e.nextSibling}return t.push(n),t})(n.getRangeAt(0)).forEach(t=>{t.nodeType===Node.ELEMENT_NODE?t.style.lineHeight=e:t.nodeType===Node.TEXT_NODE&&t.parentElement&&(t.parentElement.style.lineHeight=e)})}else t.style.lineHeight=e;t.focus()}(this.value)})}()}()}),console.log("Prompt editor script loaded")})();